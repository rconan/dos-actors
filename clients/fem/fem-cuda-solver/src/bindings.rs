/* automatically generated by rust-bindgen 0.71.1 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cublasContext {
    _unused: [u8; 0],
}
pub type cublasHandle_t = *mut cublasContext;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mode_state_space {
    pub x0: f64,
    pub x1: f64,
    pub a0: f64,
    pub a1: f64,
    pub a2: f64,
    pub a3: f64,
    pub b2: f64,
    pub b3: f64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of mode_state_space"][::std::mem::size_of::<mode_state_space>() - 64usize];
    ["Alignment of mode_state_space"][::std::mem::align_of::<mode_state_space>() - 8usize];
    ["Offset of field: mode_state_space::x0"]
        [::std::mem::offset_of!(mode_state_space, x0) - 0usize];
    ["Offset of field: mode_state_space::x1"]
        [::std::mem::offset_of!(mode_state_space, x1) - 8usize];
    ["Offset of field: mode_state_space::a0"]
        [::std::mem::offset_of!(mode_state_space, a0) - 16usize];
    ["Offset of field: mode_state_space::a1"]
        [::std::mem::offset_of!(mode_state_space, a1) - 24usize];
    ["Offset of field: mode_state_space::a2"]
        [::std::mem::offset_of!(mode_state_space, a2) - 32usize];
    ["Offset of field: mode_state_space::a3"]
        [::std::mem::offset_of!(mode_state_space, a3) - 40usize];
    ["Offset of field: mode_state_space::b2"]
        [::std::mem::offset_of!(mode_state_space, b2) - 48usize];
    ["Offset of field: mode_state_space::b3"]
        [::std::mem::offset_of!(mode_state_space, b3) - 56usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct state_space {
    pub n_mode: ::std::os::raw::c_int,
    pub n_input: ::std::os::raw::c_int,
    pub n_output: ::std::os::raw::c_int,
    pub d_i2m: *mut f64,
    pub d_m2o: *mut f64,
    pub d_u: *mut f64,
    pub d_v: *mut f64,
    pub d_x0: *mut f64,
    pub d_y: *mut f64,
    pub handle: cublasHandle_t,
    pub d_mss: *mut mode_state_space,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of state_space"][::std::mem::size_of::<state_space>() - 80usize];
    ["Alignment of state_space"][::std::mem::align_of::<state_space>() - 8usize];
    ["Offset of field: state_space::n_mode"][::std::mem::offset_of!(state_space, n_mode) - 0usize];
    ["Offset of field: state_space::n_input"]
        [::std::mem::offset_of!(state_space, n_input) - 4usize];
    ["Offset of field: state_space::n_output"]
        [::std::mem::offset_of!(state_space, n_output) - 8usize];
    ["Offset of field: state_space::d_i2m"][::std::mem::offset_of!(state_space, d_i2m) - 16usize];
    ["Offset of field: state_space::d_m2o"][::std::mem::offset_of!(state_space, d_m2o) - 24usize];
    ["Offset of field: state_space::d_u"][::std::mem::offset_of!(state_space, d_u) - 32usize];
    ["Offset of field: state_space::d_v"][::std::mem::offset_of!(state_space, d_v) - 40usize];
    ["Offset of field: state_space::d_x0"][::std::mem::offset_of!(state_space, d_x0) - 48usize];
    ["Offset of field: state_space::d_y"][::std::mem::offset_of!(state_space, d_y) - 56usize];
    ["Offset of field: state_space::handle"][::std::mem::offset_of!(state_space, handle) - 64usize];
    ["Offset of field: state_space::d_mss"][::std::mem::offset_of!(state_space, d_mss) - 72usize];
};
unsafe extern "C" {
    #[link_name = "\u{1}_ZN11state_space5buildEiP16mode_state_spaceiPdiS2_"]
    pub fn state_space_build(
        this: *mut state_space,
        n_mode: ::std::os::raw::c_int,
        mss: *mut mode_state_space,
        n_input: ::std::os::raw::c_int,
        i2m: *mut f64,
        n_output: ::std::os::raw::c_int,
        m2o: *mut f64,
    );
}
unsafe extern "C" {
    #[link_name = "\u{1}_ZN11state_space4freeEv"]
    pub fn state_space_free(this: *mut state_space);
}
unsafe extern "C" {
    #[link_name = "\u{1}_ZN11state_space4stepEPdS0_"]
    pub fn state_space_step(this: *mut state_space, u: *mut f64, y: *mut f64);
}
impl state_space {
    #[inline]
    pub unsafe fn build(
        &mut self,
        n_mode: ::std::os::raw::c_int,
        mss: *mut mode_state_space,
        n_input: ::std::os::raw::c_int,
        i2m: *mut f64,
        n_output: ::std::os::raw::c_int,
        m2o: *mut f64,
    ) {
        state_space_build(self, n_mode, mss, n_input, i2m, n_output, m2o)
    }
    #[inline]
    pub unsafe fn free(&mut self) {
        state_space_free(self)
    }
    #[inline]
    pub unsafe fn step(&mut self, u: *mut f64, y: *mut f64) {
        state_space_step(self, u, y)
    }
}
